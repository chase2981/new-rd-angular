# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/new-rd-angular
    # The primary container is an instance of the first list image listed. Your build commands run in this container.
    docker:
      # specify the version you desire here
      - image: circleci/node:9.3.0
      # # The secondary container is an instance of the second listed image which is run in a common network where ports exposed on the primary container are available on localhost.
      #   - image: mongo:3.4.4
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ~/new-rd-angular
          paths:
            - node_modules
            - yarn.lock
            
  test:
    working_directory: ~/new-rd-angular
    docker:
      - image: circleci/node:9.3.0
      # - image: mongo:3.4.4
    steps:
      - checkout

      - attach_workspace:
          at: ~/new-rd-angular

      - run: yarn test

      # - store_artifacts:
      #     path: dist/reports/coverage/

      # - store_artifacts:
      #     path: dist/reports/junit/

      # - store_test_results:
      #     path: dist/reports/coverage/cobertura.xml
 
  deploy:
    working_directory: ~/new-rd-angular
    docker:
      - image: circleci/node:9.3.0
      # - image: mongo:3.4.4
    steps:
      - checkout

      - attach_workspace:
          at: ~/new-rd-angular
      
      - run: yarn build
      - run: yarn semantic-release || true

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - dev
      - test:
          requires:
            - build
          filters:
            branches:
              only: 
                - master
                - dev
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
