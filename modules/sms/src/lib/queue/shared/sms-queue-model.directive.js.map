{"version":3,"file":"sms-queue-model.directive.js","sourceRoot":"","sources":["sms-queue-model.directive.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA+E;AAG/E,0CAAsD;AACtD,6CAA2C;AAG3C,6CAA2C;AAK3C,IAAa,sBAAsB;IASjC,gCAAoB,OAA4B,EAAU,KAAY;QAAlD,YAAO,GAAP,OAAO,CAAqB;QAAU,UAAK,GAAL,KAAK,CAAO;QAP7D,OAAE,GAAW,IAAI,CAAC;QAClB,QAAG,GAAQ,IAAI,oBAAQ,EAAE,CAAC;QAC1B,iBAAY,GAAW,IAAI,CAAC;QAC5B,YAAO,GAAsB,IAAI,mBAAY,EAAO,CAAC;QAE7C,aAAQ,GAAW,WAAW,CAAC;QAG9C,+GAA+G;QAC/G,UAAU;IACZ,CAAC;IAED,yCAAQ,GAAR;QACE,8BAA8B;QAE9B,4DAA4D;QAE5D,+BAA+B;QAC/B,yBAAyB;QACzB,0BAA0B;QAC1B,sCAAsC;QACtC,oBAAoB;QACpB,eAAe;QACf,uBAAuB;QACvB,uBAAuB;QACvB,mCAAmC;QACnC,gBAAgB;QAChB,MAAM;IACR,CAAC;IAED,qCAAI,GAAJ;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACvD,CAAC;IAED,sBAAI,0CAAM;aAAV;YACE,IAAI,MAAM,GAAQ,EAAE,CAAC;YACrB,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC;gBACpB,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAOH,6BAAC;AAAD,CAAC,AAhDD,IAgDC;AA9CU;IAAR,YAAK,EAAE;;kDAAmB;AAClB;IAAR,YAAK,EAAE;;mDAA2B;AAC1B;IAAR,YAAK,EAAE;;4DAA6B;AAC5B;IAAR,YAAK,EAAE;8BAAU,mBAAY;uDAAgC;AALnD,sBAAsB;IAHlC,gBAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;KAC9B,CAAC;yDAU6B,4BAAmB,oBAAnB,4BAAmB,sDAAiB,cAAK,oBAAL,cAAK;GAT3D,sBAAsB,CAgDlC;AAhDY,wDAAsB","sourcesContent":["import { Directive, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs/Rx';\n\nimport { TextMsgItApiService } from '../../../shared';\nimport { Toast } from '../../../../common';\n\nimport { Sms } from '../../sms';\nimport { SmsModel } from '../../sms.model';\n\n@Directive({\n  selector: '[rdSmsQueueModel]'\n})\nexport class SmsQueueModelDirective implements OnInit {\n\n  @Input() id: number = null;\n  @Input() sms: Sms = new SmsModel();\n  @Input() sendDateTime: string = null;\n  @Input() enqueue: EventEmitter<any> = new EventEmitter<any>();\n\n  private readonly endpoint: string = `/smsQueue`;\n\n  constructor(private textApi: TextMsgItApiService, private toast: Toast) {\n    /* maps the raw python models to typescript models via its extended class properties being angular @Input()s */\n    //super();\n  }\n\n  ngOnInit() {\n    // let enqueue = this.enqueue;\n\n    // let post = this.enqueue.switchMap(result => this.post());\n\n    // post.subscribe((result) => {\n    //   this.toast.success({\n    //     title: 'success!!',\n    //     msg: 'sms successfully queued.'\n    //   }).log(result);\n    // }, (ex) => {\n    //   this.toast.error({\n    //     title: 'oops!!',\n    //     msg: 'something went wrong.'\n    //   }).log(ex);\n    // });\n  }\n\n  post() {\n    return this.textApi.post(this.endpoint, this.mapped);\n  }\n\n  get mapped() {\n    let result: any = {};\n    for (let prop in this)\n      result[prop] = this[prop];\n    return result;\n  }\n\n  /* needed? */\n  // get model(){\n  //   return new SmsQueueModel(this);\n  // }\n\n}\n"]}