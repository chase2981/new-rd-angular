{"version":3,"file":"character-counter.directive.js","sourceRoot":"","sources":["character-counter.directive.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAmF;AACnF,wCAAyC;AAWzC,IAAa,yBAAyB;IAQpC,mCAAY,UAAsB,EAAU,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;QAPnD,YAAO,GAAa,EAAE,CAAC;QACvB,aAAQ,GAAY,IAAI,CAAC;QACxB,WAAM,GAAsB,IAAI,mBAAY,EAAO,CAAC;QAM5D,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IAED,4CAAQ,GAAR;IAEA,CAAC;IAED,mDAAe,GAAf;QACE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE;YACxB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,SAAS,IAAI,CAAC,CAAC;gBAClC,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAK,GAAL;QACE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,YAAY,GAAW,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;QAC9C,IAAI,KAAK,GAAW,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;QACvC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACpC,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC;QAC7B,IAAI,cAAc,GAAG,SAAS,CAAC;QAC/B,GAAG,CAAC,CAAe,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAA1B,IAAI,MAAM,SAAA;YACb,EAAE,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAI,MAAM,CAAC,IAAI,MAAG,CAAC,CAAC;gBAC5C,cAAc,IAAI,MAAM,CAAC,UAAU,CAAC;SACvC;QAED,IAAI,SAAS,GAAG,CAAC,GAAG,GAAG,cAAc,CAAC,CAAC;QAEvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,iCAAiC;QAEjC,8BAA8B;QAC9B,2CAA2C;QAC3C,8CAA8C;QAC9C,WAAW;QACX,wCAAwC;QACxC,gDAAgD;QAChD,IAAI;QAEJ,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAED,iDAAa,GAAb;QACE,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,KAAK,GAAW,MAAM,CAAC,GAAG,EAAE,CAAC;QACjC,MAAM,CAAC,GAAG,CAAC,KAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAG,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEH,gCAAC;AAAD,CAAC,AAlED,IAkEC;AAjEU;IAAR,YAAK,EAAE;;0DAAwB;AACvB;IAAR,YAAK,EAAE;;2DAA0B;AACxB;IAAT,aAAM,EAAE;8BAAS,mBAAY;yDAAgC;AAHnD,yBAAyB;IAPrC,gBAAS,CAAC;QACT,QAAQ,EAAE,yDAAyD;QACnE,QAAQ,EAAE,oBAAoB;QAC9B,SAAS,EAAE;YACT,eAAO;SACR;KACF,CAAC;qCASwB,iBAAU,sBAAmB,eAAO,oBAAP,eAAO;GARjD,yBAAyB,CAkErC;AAlEY,8DAAyB","sourcesContent":["import { Directive, Input, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\nimport { Header } from './shared';\n\n@Directive({\n  selector: 'input[rdCharacterCounter], textarea[rdCharacterCounter]',\n  exportAs: 'rdCharacterCounter',\n  providers: [\n    NgModel\n  ]\n})\nexport class CharacterCounterDirective {\n  @Input() headers: Header[] = [];\n  @Input() restrict: boolean = true;\n  @Output() result: EventEmitter<any> = new EventEmitter<any>();\n\n  characters: number;\n  input: JQuery;\n\n  constructor(elementRef: ElementRef, private ngModel: NgModel) {\n    this.input = $(elementRef.nativeElement);\n  }\n\n  ngOnInit(){\n\n  }\n\n  ngAfterViewInit() {\n    let self = this;\n    $(this.input).ready(function () {\n      self.count();\n    });\n    $(this.input).on('keyup', function () {\n      let remaining = self.count();\n      if (self.restrict && remaining <= 0)\n        self.restrictInput();\n    });\n  }\n\n  count() {\n    let self = this;\n    let target = this.input;\n    let initialChars: string = target.val() || '';\n    let chars: string = target.val() || '';\n    chars = chars.replace(/\\[.+]/g, '');\n    let rawLength = chars.length;\n    let adjustedLength = rawLength;\n    for (let header of self.headers) {\n      if (initialChars.includes(`[${header.name}]`))\n        adjustedLength += header.max_length;\n    }\n\n    let remaining = (160 - adjustedLength);\n\n    this.result.emit(remaining);\n    this.characters = remaining;\n\n    // $('#counter').text(remaining);\n\n    // if (adjustedLength > 154) {\n    //   $(\"#counter\").css(\"color\", \"#b94a48\");\n    //   $(\"#counter\").css(\"font-weight\", \"bold\");\n    // } else {\n    //   $(\"#counter\").css(\"color\", \"#333\");\n    //   $(\"#counter\").css(\"font-weight\", \"normal\");\n    // }\n\n    return remaining;\n  }\n\n  restrictInput() {\n    let target = $(this.input);\n    let value: string = target.val();\n    target.val(`${value.substr(0, 160)}`);\n    target.focus();\n  }\n\n}\n"]}